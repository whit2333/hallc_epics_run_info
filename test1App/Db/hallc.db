#
# DAQ run number (long integer type)
#
record(longin, "hcHMSIntRunNumber") {
  field(INP, "hcHMSRunNumber CP")
  field(DESC, "hallc HMS COIN run number")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
}
record(longin, "hcSHMSIntRunNumber") {
  field(INP,  "hcSHMSRunNumber CP")
  field(DESC, "hallc SHMS COIN run number")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
}
record(longin, "hcCOINIntRunNumber") {
  field(INP,  "hcCOINRunNumber CP")
  field(DESC, "hallc CODA COIN run number")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
}

#
# accumulated charge for hallc bcm. 
# Only integrates charge when hcHMSRunInProgress is true (ie, DAQ is taking data)
#
record(calc, "hcHMSRunAccumulatedCharge") {
  field(SCAN,"2 second")
  field(INPA, "hcHMSRunInProgress NPP")
  field(INPB, "ibcm1 CP") 
  field(INPC, "hcHMSRunAccumulatedCharge.VAL NPP")
  field(CALC, "A*2.0*B + C")
  field(PREC, "4")
  info(Q:group, {
      "hcHMSRun":{"AccumulatedCharge": {+channel:"VAL"}}
  })
}
record(calc, "hcSHMSRunAccumulatedCharge") {
  field(SCAN,"2 second")
  field(INPA, "hcSHMSRunInProgress NPP")
  field(INPB, "ibcm1 CP") 
  field(INPC, "hcSHMSRunAccumulatedCharge.VAL NPP")
  field(CALC, "A*2.0*B + C")
  field(PREC, "4")
  info(Q:group, {
      "hcSHMSRun":{"AccumulatedCharge": {+channel:"VAL"}}
  })
}
record(calc, "hcHMSRunTime") {
  field(INPA, "hcHMSRunInProgress NPP")
  field(INPB, "ibcm1 CP") 
  field(INPC, "hcHMSRunTime.VAL NPP")
  field(CALC, "A*2.0 + C")
  field(PREC, "8")
}
record(calc, "hcSHMSRunTime") {
  field(SCAN, "2 second")
  field(INPA, "hcSHMSRunInProgress NPP")
  field(INPB, "ibcm1 CP") 
  field(INPC, "hcSHMSRunTime.VAL NPP")
  field(CALC, "A*2.0 + C")
  field(PREC, "8")
}

#
# COIN charge/beam current
#
record(calc, "hcCOINRunAccumulatedCharge") {
  field(SCAN,"2 second")
  field(INPA, "hcCOINRunInProgress PP")
  field(INPB, "ibcm1 CPP") 
  field(INPC, "hcCOINRunAccumulatedCharge.VAL PP")
  field(CALC, "(B>0.5) ? (A*2.0*B + C) : C")
  field(PREC, "10")
  #field(FLNK, "hcCOINRunTime")
}
record(calc, "hcCOINRunTime") {
  #field(SCAN, "Passive")
  field(SCAN,"2 second")
  field(INPA, "hcCOINRunInProgress PP")
  field(INPB, "ibcm1 CPP") 
  field(INPC, "hcCOINRunTime.VAL PP")
  field(CALC, "(B>0.5) ? (A*2.0 + C) : C")
  field(PREC, "8")
  #field(FLNK, "hcCOINRunAverageBeamCurrent")
}

record(calc, "hcCOINRunAverageBeamCurrent") {
  field(SCAN,"2 second")
  #field(SCAN,"Passive")
  field(INPA, "hcCOINRunTime PP")
  field(INPB, "hcCOINRunAccumulatedCharge PP") 
  field(CALC, "B/A")
  field(PREC, "4")
}


#
# This output resets the accumulated charge when a new run is started.
# If the DAQ crashes RunInProgress will remain 1. So instead of using 
# RunInProgress we just look for changes to the set run number. Which
# is set in the CODA start_of_run script.
#
record(calcout, "hcSHMSRunChargeReset") {
  field(SCAN, "2 second")
  field(OOPT, "On Change")
  field(DOPT, "Use OCAL") # to set OUT
  field(OUT,  "hcSHMSRunAccumulatedCharge CA")
  field(INPA, "hcSHMSRunNumber CP")
  field(CALC, "A")
  field(OCAL, "0.0")
  field(PREC, "4")
}
record(calcout, "hcHMSRunChargeReset") {
  field(SCAN, "2 second")
  field(OOPT, "On Change")
  field(DOPT, "Use OCAL") # to set OUT
  field(OUT,  "hcHMSRunAccumulatedCharge CA")
  field(INPA, "hcHMSRunNumber CP")
  field(CALC, "A")
  field(OCAL, "0.0")
  field(PREC, "4")
}
record(calcout, "hcCOINRunChargeReset") {
  field(OOPT, "On Change")
  field(DOPT, "Use OCAL") # to set OUT
  field(OUT,  "hcCOINRunAccumulatedCharge CA")
  field(INPA, "hcCOINRunNumber CP")
  field(CALC, "A")
  field(OCAL, "0.0")
  field(PREC, "4")
  field(FLNK, "hcCOINResetRunTime")
}
record(calcout, "hcCOINResetRunTime") {
  field(SCAN, "Passive")
  field(OUT,  "hcCOINRunTime CA")
  field(INPA, "hcCOINRunTime PP")
  field(CALC, "0.0001")
}

#########################################################
# Spectrometer angle encoder offsets
#
# Used to reliably calculate the spectrometer angle:
#  theta = encoder + offset
#
record(ai, "hcHMSAngleEncoderOffset") {
  field(DESC, "HMS Angle Encoder Offset")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(FLNK, "hcHMSCorrectedAngle")
  field(PREC, "5")
}
record(ai, "hcSHMSAngleEncoderOffset") {
  field(DESC, "SHMS Angle Encoder Offset")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(FLNK, "hcSHMSCorrectedAngle")
  field(PREC, "5")
}

#
# Corrected angle values
#
record(calc, "hcHMSCorrectedAngle") {
  field(INPA, "ecHMS_Angle CP")
  field(INPB, "hcHMSAngleEncoderOffset PP")
  field(CALC, "A+B")
  field(PREC, "4")
}
record(calc, "hcSHMSCorrectedAngle") {
  field(INPA, "ecSHMS_Angle CP")
  field(INPB, "hcSHMSAngleEncoderOffset PP")
  field(CALC, "A+B")
  field(PREC, "4")
}

#
# Momentum mirrored
#
record(ai, "hcHMS_MomentumDummy") {
  field(DESC, "dummy hcHMS_MomentumDummy")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(PREC, "4")
}

record(calc, "hcHMSMomentum") {
  #field(INPA, "HMS_Momentum CP")
  field(INPA, "hcHMS_MomentumDummy CP")
  field(CALC, "A")
  field(PREC, "4")
}
record(calc, "hcSHMSMomentum") {
  field(INPA, "SHMS_Momentum CP")
  field(CALC, "A")
  field(PREC, "4")
}

########################################################
# Tracking run settings
########################################################
#
# A setting change:
#   1) Different target (done)
#   2) Different spectrometer angle (done)
#   3) Different spectrometer momentum (done)
#   4) Different DAQ prescales ( incomplete )
#   5) 
#
# What is the same:
#

record(longin, "hcRunSettingNumber") {
  field(SCAN, "Passive")
  field(DESC, "hallc run plan setting number")
  field(DTYP, "Soft Channel")
}
record(longin, "hcRunSettingReconfigured") {
  field(SCAN, "Passive")
  field(DESC, "Waits to increment the RunSettingNumber")
  field(DTYP, "Soft Channel")
}

#########################################
#
record(ai, "hcRunSettingHMSAngle") {
  field(DESC, "HMS Angle for current run setting")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  #field(FLNK, "hcHMSCorrectedAngle")
  field(PREC, "5")
}
record(ai, "hcRunSettingSHMSAngle") {
  field(DESC, "SHMS Angle for current run setting")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  #field(FLNK, "hcSHMSCorrectedAngle")
  field(PREC, "5")
}


#
# HMS Changes
# 
record(calcout, "hcHMSSettingChange") {
  field(SCAN, "2 second")
  field(OOPT, "On Change")
  field(DOPT, "Use OCAL") # to set OUT
  field(OUT,  "hcRunSettingNumber CA")
  field(INPA, "hcRunSettingNumber.VAL PP")
  field(INPB, "hcHMSCorrectedAngle CP")
  field(INPC, "hcRunSettingHMSAngle PP")
  field(INPD, "hcHMSMomentum CP")
  field(CALC, "(B-C)+D")
  field(OCAL, "A+1")
  field(PREC, "4")
}

#
# SHMS Changed
# 
record(calcout, "hcSHMSSettingChange") {
  field(SCAN, "2 second")
  field(OOPT, "On Change")
  field(DOPT, "Use OCAL") # to set OUT
  field(OUT,  "hcRunSettingReconfigured CA")
  field(INPA, "hcRunSettingReconfigured.VAL PP")
  field(INPB, "hcSHMSCorrectedAngle CP")
  field(INPC, "hcRunSettingSHMSAngle PP")
  field(INPD, "hcSHMSMomentum CP")
  field(CALC, "B-C")
  field(OCAL, "A+1")
  field(PREC, "4")
}


#
# Target changed
#
record(calc, "hcBDSSELECT_mirror") {
  field(INPA, "hcBDSSELECT CP")
  field(CALC, "A")
  field(PREC, "2")
}
record(calcout, "hcTargetChange") {
  #field(SCAN, "Passive")
  field(SCAN, "2 second")
  field(OOPT, "On Change")
  field(DOPT, "Use OCAL") # to set OUT
  field(OUT,  "hcRunSettingReconfigured CA")
  field(INPA, "hcRunSettingReconfigured.VAL PP")
  field(INPB, "hcBDSSELECT_mirror CP")
  field(CALC, "B")
  field(OCAL, "1")
  field(PREC, "4")
}

########################
#
# Increment the run setting 
#

record(calc, "hcCreateNewRunSetting") {
  field(INPA, "hcSHMSRunInProgress CP")
  field(CALC, "A")
  field(PREC, "2")
  field(FLNK,"hcRunSettingIncrement")
}
record(calcout, "hcRunSettingIncrement") {
  field(OOPT, "Transition To Zero")
  field(DOPT, "Use OCAL") # to set OUT
  field(OUT,  "hcRunSettingNumber CA")
  field(INPA, "hcRunSettingNumber PP")
  field(INPB, "hcRunSettingReconfigured PP")
  field(CALC, "B==0? 0 : 1")
  field(OCAL, "A+1")
  field(PREC, "4")
}

#
# When a new coda run starts and a setting has changed (hcRunSettingReconfigured!=0)
# increment to the next run setting.
#
record(calcout, "hcResetRunSetting") {
  field(OOPT, "Transition To Zero")
  field(DOPT, "Use OCAL") # to set OUT
  field(OUT,  "hcStartNewRunSetting CA")
  field(INPA, "hcCOINRunInProgress CP")
  field(INPB, "hcRunSettingReconfigured PP")
  field(CALC, "(A && ABS(B>0))? 0 : 1")
  field(OCAL, "0")
  field(PREC, "4")
}

record(dfanout, "hcStartNewRunSetting"){
  field(SCAN, "Passive")
  field(DESC, "hallc run plan setting number")
  field(OUTA,  "hcRunSettingReconfigured CA")
  field(OUTB,  "hcRunSettingIncrement CA")
}

##############################################
#
# Setting charge/beam current
#
record(calc, "hcRunSettingAccumulatedCharge") {
  field(SCAN,"2 second")
  field(INPA, "hcCOINRunInProgress PP")
  field(INPB, "ibcm1 CPP") 
  field(INPC, "hcRunSettingAccumulatedCharge.VAL PP")
  field(CALC, "(B>0.5) ? (A*2.0*B + C) : C")
  field(PREC, "10")
}
record(calc, "hcRunSettingTime") {
  #field(SCAN, "Passive")
  field(SCAN,"2 second")
  field(INPA, "hcCOINRunInProgress PP")
  field(INPB, "ibcm1 CPP") 
  field(INPC, "hcRunSettingTime.VAL PP")
  field(CALC, "(B>0.5) ? (A*2.0 + C) : C")
  field(PREC, "8")
}

record(calc, "hcRunSettingAverageBeamCurrent") {
  field(SCAN,"2 second")
  #field(SCAN,"Passive")
  field(INPA, "hcRunSettingTime PP")
  field(INPB, "hcRunSettingAccumulatedCharge PP") 
  field(CALC, "B/A")
  field(PREC, "4")
}


#
# This output resets the accumulated charge when a new run is started.
# If the DAQ crashes RunInProgress will remain 1. So instead of using 
# RunInProgress we just look for changes to the set run number. Which
# is set in the CODA start_of_run script.
#
record(calcout, "hcRunSettingChargeReset") {
  field(OOPT, "On Change")
  field(DOPT, "Use OCAL") # to set OUT
  field(OUT,  "hcRunSettingAccumulatedCharge CA")
  field(INPA, "hcRunSettingNumber NPP")
  field(CALC, "A")
  field(OCAL, "0.0")
  field(PREC, "4")
  field(FLNK, "hcResetRunSettingTime")
}
record(calcout, "hcResetRunSettingTime") {
  field(SCAN, "Passive")
  field(OUT,  "hcRunSettingTime CA")
  field(INPA, "hcRunSettingTime PP")
  field(CALC, "0.0001")
}

